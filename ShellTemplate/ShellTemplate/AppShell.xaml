<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="ShellTemplate.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:ShellTemplate.Controls"
    xmlns:local="clr-namespace:ShellTemplate.Views"
    Title="ShellTemplate">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Dark={StaticResource WindowBackgroundColorDark}, Light={StaticResource WindowBackgroundColor}}" />
                <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Dark={StaticResource TextColorDark}, Light={StaticResource TextColor}}" />
                <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Dark={StaticResource TextColorDark}, Light={StaticResource TextColor}}" />
                <Setter Property="Shell.DisabledColor" Value="{StaticResource SystemGray}" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="White" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
                https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White" />
            </Style>
            <Style
                ApplyToDerivedTypes="True"
                Class="FlyoutItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="BackgroundColor" Value="{StaticResource SystemGray5}" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="White" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="White" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style
                ApplyToDerivedTypes="True"
                Class="MenuItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <ShellItem FlyoutItemIsVisible="False" Route="LoginPage">
        <ShellContent ContentShellTemplate="{DataShellTemplate local:LoginPage}" />
    </ShellItem>

    <FlyoutItem Title="Overview">
        <FlyoutItem.Icon>
            <FontImageSource
                FontFamily="FAS"
                Glyph="{StaticResource IconOverview}"
                Color="{StaticResource SystemGray5Dark}" />
        </FlyoutItem.Icon>
        <ShellContent ContentShellTemplate="{DataShellTemplate local:OverviewPage}" Route="OverviewPage" />
    </FlyoutItem>

    <FlyoutItem Title="Settings">
        <FlyoutItem.Icon>
            <FontImageSource
                FontFamily="FAS"
                Glyph="{StaticResource IconSettings}"
                Color="{StaticResource SystemGray5Dark}" />
        </FlyoutItem.Icon>
        <ShellContent ContentShellTemplate="{DataShellTemplate local:SettingsPage}" Route="SettingsPage" />
    </FlyoutItem>

    <FlyoutItem Title="Profile">
        <FlyoutItem.Icon>
            <FontImageSource
                FontFamily="FAS"
                Glyph="{StaticResource IconProfile}"
                Color="{StaticResource SystemGray5Dark}" />
        </FlyoutItem.Icon>
        <ShellContent ContentShellTemplate="{DataShellTemplate local:ProfilePage}" Route="ProfilePage" />
    </FlyoutItem>

    <FlyoutItem Title="About">
        <FlyoutItem.Icon>
            <FontImageSource
                FontFamily="FAS"
                Glyph="{StaticResource IconInfo}"
                Color="{StaticResource SystemGray5Dark}" />
        </FlyoutItem.Icon>
        <ShellContent ContentShellTemplate="{DataShellTemplate local:AboutPage}" Route="AboutPage" />
    </FlyoutItem>


    <!--  When the Flyout is visible this will be a menu item you can tie a click behavior to  -->

    <MenuItem
        Clicked="OnMenuItemClicked"
        StyleClass="MenuItemLayoutStyle"
        Text="Logout" />

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--
    <TabBar>
        <ShellContent ContentShellTemplate="{DataShellTemplate local:SettingsPage}" Route="SettingsPage" />
    </TabBar>
    -->

    <!-- Optional ShellTemplates
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderShellTemplate>
        <DataShellTemplate>
            <Grid>ContentHere</Grid>
        </DataShellTemplate>
    </Shell.FlyoutHeaderShellTemplate>

    // ItemShellTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemShellTemplate>
        <DataShellTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataShellTemplate>
    </Shell.ItemShellTemplate>

    // MenuItemShellTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemShellTemplate>
        <DataShellTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataShellTemplate>
    </Shell.MenuItemShellTemplate>

    -->
    <Shell.FlyoutFooter>
        <controls:FlyoutFooter />
    </Shell.FlyoutFooter>

</Shell>
